function checking_overlay_data(varargin);

%for i=2:length(to_do);
data_main_path='\\slcu.cam.ac.uk\data\Microscopy\TeamJL\Chris\movies\paulsson_JLB259\';
data_path={[data_main_path,'2023-03-30','\subAuto\'],...
           [data_main_path,'2023-04-05','\subAuto\'],...
             [data_main_path,'2023-04-14','\subAuto\'],...
             [data_main_path,'2023-04-21','\subAuto\']};
data_path_raw={[data_main_path,'2023-03-30\'],...
           [data_main_path,'2023-04-05\'],...
             [data_main_path,'2023-04-14\'],...
             [data_main_path,'2023-04-21\']};
t_name={'2023-03-30','2023-04-05','2023-04-14','2023-04-21'};


%Default parameters
% numlags=500;
% numstd=3;
% cond=1:8;
plot_now=2;
do_plot=0;
plot_color=1;
do_auto=0;
L=576;
%L=721;
% L=613;
%L=757;
lag=1;
name={'0 uM IPTG','2uM IPTG','3uM IPTG','4uM IPTG','5 uM IPTG','6 uM IPTG','7 uM IPTG','8 uM IPTG','9 uM IPTG','10 uM IPTG'};
iptg=[0,2,3,4,5,6,7,8,9,10];
on_colors_all={'w','y','g','c'};


%checking input
date_now=nan;
if ~isempty(varargin)
    for i = 1:2:length(varargin)
        theparam = lower(varargin{i});
        switch(strtok(theparam))
            case 'date'
                date_now=varargin{i+1};
        end
    end
end

if isnan(date_now);
    date_now=1;
end

date_in='2022-03-23';
date_out='2022-04-52';
do.phase_name='w1Phase';
do.rfp_name='w2RFP - Camera';
do.yfp_name='w3YFP - Camera';
do.rot=0;
[pos_names,pos_names_data]=getting_pos_names_for_seg(data_path{date_now},do);

%for i=1:length(pos_names);
for i=1;
%     p = initschnitz(pos_names{i},date_in,'bacillus','rootDir',data_path{date_now},'imageDir',data_path{date_now});
    %load([p.segmentationDir,pos_names{i},'seg',str3(576)]);
    imp=imread([data_path_raw{date_now},pos_names_data{i}(1:end-4),'_',do.phase_name,'_s',num2str(i),'_t',num2str(L),'.tif']);
    rreg=imread([data_path_raw{date_now},pos_names_data{i}(1:end-4),'_',do.rfp_name,'_s',num2str(i),'_t',num2str(L),'.tif']);
    im_out(:,:,1)=mat2gray(imp);
    im_out(:,:,2)=mat2gray(imp);
    im_out(:,:,3)=mat2gray(imp);
    im_out(:,:,1)=mat2gray(rreg)+im_out;
    figure;
    imshow(im_out);

end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [pos_names_file,pos_names]=getting_pos_names_for_seg(in_path,do)
% This function gets the positions names. 
% Its a special case if rotation is needed.
% Input: 
% in_path: string e.g. '\\slcu.cam.ac.uk\data\Microscopy\TeamJL'
% p: path structer as definded with initschnitz
% do: structe with informatoin what to do


if do.rot==1
    %Special case if more than 100 pos
    D=dir([in_path,'*p-001.tif']);
    if length(D)>99
        names={D.name};
        f_pre=cellfun(@(a) strfind(a,'-'),names,'UniformOutput',false);
        f=cell2mat(cellfun(@(a) a(2)-1,f_pre,'UniformOutput',false));
    else
        f=ones(length(D),1)*11;
    end
    pos_names_cell={D.name};
    pos_names=cell(length(D),1);
    for i=1:length(pos_names_cell)
        pos_names{i}=pos_names_cell{i}(1:f(i));
    end
else
    D=dir([in_path(1:end-8),'*w1*_t1.tif']);
    names={D.name};
    f_pre=cellfun(@(a) strfind(a,'_'),names,'UniformOutput',false);
    f=cell2mat(cellfun(@(a) a(2)-1,f_pre,'UniformOutput',false)); 
    movie_base=names{1}(1:f_pre{1}(1)-1);
    %Removing number from basename
    matches=regexp(movie_base,'\d*','Match');
    if ~isempty(matches)
        fm=strfind(movie_base,matches{1});
        movie_base_file=movie_base(1:fm-1);
    end
    pos_names=cell(length(D),1);
    pos_names_file=cell(length(D),1);
    for i=1:length(D)
        pos_names{i}=[movie_base,'-',str3(str2double(names{i}(f_pre{i}(2)+2:f_pre{i}(3)-1)))];
        pos_names_file{i}=[movie_base_file,'-',str3(str2double(names{i}(f_pre{i}(2)+2:f_pre{i}(3)-1)))];
    end
    pos_names=sort(pos_names);
    pos_names_file=sort(pos_names_file);
end
end


